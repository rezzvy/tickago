class TickAgo{static SECOND_IN_SECONDS=60;static HOUR_IN_SECONDS=3600;static DAY_IN_SECONDS=86400;static MONTH_IN_SECONDS=2592e3;static YEAR_IN_SECONDS=31536e3;static MILLISECONDS_IN_SECOND=1e3;static MILLISECONDS_IN_MINUTE=6e4;static MILLISECONDS_IN_HOUR=36e5;static MILLISECONDS_IN_DAY=864e5;static parseDate(t){let N=new Date(t);if(+N)return N;throw Error("Invalid date format")}static latestMoment(t,N={}){let S=new Date,i=this.parseDate(t),I=Math.floor((S-i)/1e3),{sec:e="sec ago",minutes:a="minutes ago",hours:s="hours ago",days:D="days ago",months:O="months ago",years:o="years ago"}=N,E=[{limit:this.SECOND_IN_SECONDS,value:I,unit:e},{limit:this.HOUR_IN_SECONDS,value:Math.floor(I/this.SECOND_IN_SECONDS),unit:a},{limit:this.DAY_IN_SECONDS,value:Math.floor(I/this.HOUR_IN_SECONDS),unit:s},{limit:this.MONTH_IN_SECONDS,value:Math.floor(I/this.DAY_IN_SECONDS),unit:D},{limit:this.YEAR_IN_SECONDS,value:Math.floor(I/this.MONTH_IN_SECONDS),unit:O},];for(let{limit:l,value:$,unit:r}of E)if(I<l)return`${$} ${r}`;return`${Math.floor(I/this.YEAR_IN_SECONDS)} ${o}`}static compare(t,N){let S=this.parseDate(t),i=this.parseDate(N),I=i.getFullYear()-S.getFullYear(),e=i.getMonth()-S.getMonth(),a=i.getDate()-S.getDate();if(a<0){e--;let s=new Date(i.getFullYear(),i.getMonth(),0).getDate();a+=s}e<0&&(I--,e+=12);let D=i-S,O=Math.floor(D%this.MILLISECONDS_IN_DAY/this.MILLISECONDS_IN_HOUR),o=Math.floor(D%this.MILLISECONDS_IN_HOUR/this.MILLISECONDS_IN_MINUTE),E=Math.floor(D%this.MILLISECONDS_IN_MINUTE/this.MILLISECONDS_IN_SECOND);return{years:I,months:e,days:a,hours:O,minutes:o,seconds:E,elapsedTime:D}}}