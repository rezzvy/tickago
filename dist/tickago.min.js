class TickAgo{static SECOND_IN_SECONDS=60;static HOUR_IN_SECONDS=3600;static DAY_IN_SECONDS=86400;static MONTH_IN_SECONDS=2592e3;static YEAR_IN_SECONDS=31536e3;static MILLISECONDS_IN_SECOND=1e3;static MILLISECONDS_IN_MINUTE=6e4;static MILLISECONDS_IN_HOUR=36e5;static MILLISECONDS_IN_DAY=864e5;static parseDate(t){let N=new Date(t);if(+N)return N;throw Error("Invalid date format")}static latestMoment(t,N={}){let i=new Date,S=this.parseDate(t),e=Math.floor((i-S)/1e3),{sec:I="sec ago",minutes:s="minutes ago",hours:a="hours ago",days:o="days ago",months:D="months ago",years:O="years ago"}=N,E=[{limit:this.SECOND_IN_SECONDS,value:e,unit:I},{limit:this.HOUR_IN_SECONDS,value:Math.floor(e/this.SECOND_IN_SECONDS),unit:s},{limit:this.DAY_IN_SECONDS,value:Math.floor(e/this.HOUR_IN_SECONDS),unit:a},{limit:this.MONTH_IN_SECONDS,value:Math.floor(e/this.DAY_IN_SECONDS),unit:o},{limit:this.YEAR_IN_SECONDS,value:Math.floor(e/this.MONTH_IN_SECONDS),unit:D},];for(let{limit:l,value:$,unit:r}of E)if(e<l)return`${$} ${r}`;return`${Math.floor(e/this.YEAR_IN_SECONDS)} ${O}`}static compare(t,N){let i=this.parseDate(t),S=this.parseDate(N),e=S.getFullYear()-i.getFullYear(),I=S.getMonth()-i.getMonth(),s=S.getDate()-i.getDate();if(s<0){I--;let a=new Date(S.getFullYear(),S.getMonth(),0).getDate();s+=a}I<0&&(e--,I+=12);let o=S-i,D=Math.floor(o%this.MILLISECONDS_IN_DAY/this.MILLISECONDS_IN_HOUR),O=Math.floor(o%this.MILLISECONDS_IN_HOUR/this.MILLISECONDS_IN_MINUTE),E=Math.floor(o%this.MILLISECONDS_IN_MINUTE/this.MILLISECONDS_IN_SECOND);return{years:e,months:I,days:s,hours:D,minutes:O,seconds:E,elapsedTime:o}}}"undefined"!=typeof module&&module.exports?module.exports=TickAgo:window.TickAgo=TickAgo;