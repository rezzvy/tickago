class TickAgo{static SECOND_IN_SECONDS=1;static MINUTE_IN_SECONDS=60;static HOUR_IN_SECONDS=3600;static DAY_IN_SECONDS=86400;static MILLISECONDS_IN_SECOND=1e3;static MILLISECONDS_IN_MINUTE=6e4;static MILLISECONDS_IN_HOUR=36e5;static MILLISECONDS_IN_DAY=864e5;static MONTH_IN_SECONDS(t=new Date){let N=new Date(t.getFullYear(),t.getMonth()+1,0).getDate();return N*this.DAY_IN_SECONDS}static YEAR_IN_SECONDS(t=new Date){let N=t.getFullYear()%4==0&&t.getFullYear()%100!=0||t.getFullYear()%400==0;return(N?366:365)*this.DAY_IN_SECONDS}static parseDate(t,N){if(t instanceof Date)return t;if(N&&"string"==typeof t){let i=t.match(/\d+/g);if(!i)throw Error("Invalid date format");let S={};N.split(/[-/.\s]/).forEach((t,N)=>S[t]=+i[N]);let e=new Date(S.YYYY,(S.MM||1)-1,S.DD||1);if(!isNaN(e.getTime()))return e}let s=new Date(t);if(!isNaN(s.getTime()))return s;throw Error("Invalid date format")}static moment(t,N={}){let i=new Date,S=this.parseDate(t,N.format),e=Math.floor((i-S)/1e3),s=N.labels??{},{sec:o="sec ago",minutes:a="minutes ago",hours:D="hours ago",days:I="days ago",months:r="months ago",years:E="years ago"}=s,O=[{limit:this.MINUTE_IN_SECONDS,value:e,unit:o},{limit:this.HOUR_IN_SECONDS,value:Math.floor(e/this.MINUTE_IN_SECONDS),unit:a},{limit:this.DAY_IN_SECONDS,value:Math.floor(e/this.HOUR_IN_SECONDS),unit:D},{limit:this.MONTH_IN_SECONDS(S),value:Math.floor(e/this.DAY_IN_SECONDS),unit:I},{limit:this.YEAR_IN_SECONDS(S),value:Math.floor(e/this.MONTH_IN_SECONDS(S)),unit:r},];for(let{limit:l,value:C,unit:h}of O)if(e<l)return`${C} ${h}`;return`${Math.floor(e/this.YEAR_IN_SECONDS(S))} ${E}`}static compare(t,N,i){let S=this.parseDate(t,i),e=this.parseDate(N,i),s=Math.abs(e-S),o=s/this.MILLISECONDS_IN_SECOND,a=Math.floor(o/this.YEAR_IN_SECONDS(S)),D=o%this.YEAR_IN_SECONDS(S),I=Math.floor(D/this.MONTH_IN_SECONDS(S)),r=D%this.MONTH_IN_SECONDS(S),E=Math.floor(r/this.DAY_IN_SECONDS),O=r%this.DAY_IN_SECONDS,l=Math.floor(O/this.HOUR_IN_SECONDS),C=O%this.HOUR_IN_SECONDS,h=Math.floor(C/this.MINUTE_IN_SECONDS),n=Math.floor(C%this.MINUTE_IN_SECONDS),$={seconds:Math.floor(o),minutes:Math.floor(o/this.MINUTE_IN_SECONDS),hours:Math.floor(o/this.HOUR_IN_SECONDS),days:Math.floor(o/this.DAY_IN_SECONDS),months:12*a+I};return{years:a,months:I,days:E,hours:l,minutes:h,seconds:n,elapsedTime:s,raw:$}}}"undefined"!=typeof module&&module.exports?module.exports=TickAgo:window.TickAgo=TickAgo;